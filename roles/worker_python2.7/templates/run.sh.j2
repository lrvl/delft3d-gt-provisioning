#!/usr/bin/env bash

cd /data
if [ ! -d /data/svn ]; then
    echo "Make checkout of subversion repository"
    svn checkout {{ repos_url }} --username=delft3dgt --password={{ svn_accp_pass }} --depth immediates --no-auth-cache svn
    svn update --username=delft3dgt --password={{ svn_accp_pass }} --set-depth infinity --no-auth-cache svn/scripts svn/template
    echo "I'm updated"
else
    echo "Use existing checkout of subversion repository"
fi
echo "start python script"
for script in $@; do

    # Run scripts
    python $script

    # If we're processing delta_fringe, make movie
    if [[ $script == *"delta_fringe"* ]]
    then
        /usr/bin/ffmpeg -framerate 13 -pattern_type glob -i 'output/delta_fringe_*.png' -vf "scale=trunc(iw/2)*2:trunc(ih/2)*2"  -vcodec libx264 -pix_fmt yuv420p -preset slower -b:v 1000k -maxrate 1000k -bufsize 2000k -an -force_key_frames expr:gte'('t,n_forced/4')' -y output/delta_fringe.mp4
    fi
    # If we're processing delta_fringe, make movie
    if [[ $script == *"channel_network"* ]]
    then
        /usr/bin/ffmpeg -framerate 13 -pattern_type glob -i 'output/channel_network*.png' -vf "scale=trunc(iw/2)*2:trunc(ih/2)*2"  -vcodec libx264 -pix_fmt yuv420p -preset slower -b:v 1000k -maxrate 1000k -bufsize 2000k -an -force_key_frames expr:gte'('t,n_forced/4')' -y output/channel_network.mp4
    fi
    # If we're processing delta_fringe, make movie
    if [[ $script == *"sediment_fraction"* ]]
    then
        /usr/bin/ffmpeg -framerate 13 -pattern_type glob -i 'output/sediment_fraction*.png' -vf "scale=trunc(iw/2)*2:trunc(ih/2)*2"  -vcodec libx264 -pix_fmt yuv420p -preset slower -b:v 1000k -maxrate 1000k -bufsize 2000k -an -force_key_frames expr:gte'('t,n_forced/4')' -y output/sediment_fraction.mp4
    fi

done

# by default we're not on amazon
# See, also for alternatives
# http://serverfault.com/questions/462903/how-to-know-if-a-machine-is-an-ec2-instance
EC2=0
if [ -f /sys/hypervisor/uuid ] && [ $(head -c 3 /sys/hypervisor/uuid) == "ec2" ]; then
    # introspect the machine
    EC2=1
fi


# Amazon specific code goes here
if [ "$EC2" == "1" ]
then
    if [ -z "$uuid" ]
    then
        echo "Failed to find $uuid on amazon, not sure where to put my files"
        echo "Make sure you set the uuid"
        exit 1
    fi
    # synchronize directory with on s3 (make sure you provision aws command lines (pip install aws-cli))
    # $folder starts with '/'
    aws s3 sync /data/output "s3://{{ bucket }}$folder"
fi
