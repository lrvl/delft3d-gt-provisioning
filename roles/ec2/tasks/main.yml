---
# tasks file for roles/ec2
- name: "Create redis machine"
  ec2:
  args:
    key_name: devenv-key
    instance_type: t2.small
    image: ami-7abd0209
    wait: yes
    groups:
      - redis
      - ssh from Deltares only
    region: eu-west-1
    count: 1
    vpc_subnet_id: subnet-487c983f
    assign_public_ip: yes
    instance_tags:
      Name: "{{ redis_name }}"
      Project: "1220828"
  tags:
    - redis

- name: "Create celery machine"
  ec2:
  args:
    key_name: devenv-key
    instance_type: t2.medium
    image: ami-7abd0209
    wait: yes
    groups:
      - ssh from Deltares only
    region: eu-west-1
    count: 1
    vpc_subnet_id: subnet-487c983f
    assign_public_ip: yes
    instance_tags:
      Name: "{{ celery_name }}"
      Project: "1220828"
    volumes:
      - volume_size: 40
        volume_type: gp2
        device_name: /dev/sda1
  tags:
    - celery

- name: "Create docker node machine"
  ec2:
  args:
    key_name: devenv-key
    instance_type: t2.medium
    image: ami-7abd0209
    wait: yes
    groups:
      - efs-test
    region: eu-west-1
    count: 1
    vpc_subnet_id: subnet-487c983f
    assign_public_ip: yes
    instance_tags:
      Name: "{{ docker_node_name }}"
      Project: "1220828"
    volumes:
      - volume_size: 8
        volume_type: gp2
        device_name: /dev/sda1
  tags:
    - docker_node

- name: "Create docker consul machine"
  ec2:
  args:
    key_name: devenv-key
    instance_type: t2.micro
    image: ami-7abd0209
    wait: yes
    groups:
      - efs-test
    region: eu-west-1
    count: 1
    vpc_subnet_id: subnet-487c983f
    assign_public_ip: yes
    instance_tags:
      Name: "{{ docker_consul_name }}"
      Project: "1220828"
    volumes:
      - volume_size: 8
        volume_type: gp2
        device_name: /dev/sda1
  tags:
    - docker_consul

- name: "Create docker manage machine"
  ec2:
  args:
    key_name: devenv-key
    instance_type: t2.micro
    image: ami-7abd0209
    wait: yes
    groups:
      - efs-test
    region: eu-west-1
    count: 1
    vpc_subnet_id: subnet-487c983f
    assign_public_ip: yes
    instance_tags:
      Name: "{{ docker_manage_name }}"
      Project: "1220828"
    volumes:
      - volume_size: 8
        volume_type: gp2
        device_name: /dev/sda1
  tags:
    - docker_manage


- name: Create AMI for docker swarm
  ec2_ami:
    name: "{{ ami_name }}"
    description: "docker swarm node image"
    device_mapping:
      - device_name: /dev/sda1
        size: 8
        delete_on_termination: true
        volume_type: gp2
    tags:
      Name: "docker_swarm"
      Project: "1220828"
    instance_id: "{{ instance_id }}"
    wait: yes
    state: present
    region: eu-west-1
  tags:
    - docker_ami

- name: terminate docker swarm instance
  ec2:
    instance_ids: "{{ instance_id }}"
    region: eu-west-1
    state: absent
  tags:
    - docker_ami

- name: create launch configuration
  ec2_lc:
    name: "{{ launch_conf_name }}"
    image_id: "{{ launch_conf_img_id }}"
    instance_type: t2.medium
    region: eu-west-1
    security_groups: efs-test
    state: present
    user_data: |
                #!/bin/bash
                mkdir /data/container/files
                echo "eu-west-1b.{{ efs_id }}.efs.eu-west-1.amazonaws.com:/ /data/container/files/ nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 0 0" >> /etc/fstab
                mount -a -t nfs4
                rm -f /etc/docker/key.json
                systemctl restart docker
                runuser -l  docker -c "docker run -d swarm join --advertise=$(ip route get 8.8.8.8 | awk '/8.8.8.8/ {print $NF}'):2375 consul://{{ docker_consul_private_ip }}:8500"
    key_name: devenv-key
    volumes:
    - device_name: /dev/sda1
      volume_size: 8
      device_type: gp2
  tags:
    - launch_conf

- name: create auto scaling group
  ec2_asg:
    availability_zones: eu-west-1b
    desired_capacity: "{{ desired }}"
    launch_config_name: "{{ launch_conf_name }}"
    max_size: "{{ min }}"
    min_size: "{{ max }}"
    name: "{{ auto_scale_name }}"
    region: eu-west-1
    state: present
    tags:
      - Name: "{{ node_name }}"
      - Project: "1220828"
    wait_for_instances: yes
  tags:
    - auto_scale




